#include <stdio.h>
#include <string.h>

void xorOperation(unsigned char *data, unsigned char *key, int block_size) {
    for (int i = 0; i < block_size; ++i) {
        data[i] ^= key[i];
    }
}

void encryptECB(unsigned char *plaintext, unsigned char *key, int block_size) {
    xorOperation(plaintext, key, block_size);
}

void encryptCBC(unsigned char *plaintext, unsigned char *key, unsigned char *iv, int block_size, int num_blocks) {
    xorOperation(plaintext, iv, block_size);
    xorOperation(plaintext, key, block_size);

    for (int i = 1; i < num_blocks; ++i) {
        xorOperation(plaintext + i * block_size, plaintext + (i - 1) * block_size, block_size);
        xorOperation(plaintext + i * block_size, key, block_size);
    }
}

void decryptCBC(unsigned char *ciphertext, unsigned char *key, unsigned char *iv, int block_size, int num_blocks) {
    for (int i = num_blocks - 1; i >= 1; --i) {
        xorOperation(ciphertext + i * block_size, key, block_size);
        xorOperation(ciphertext + i * block_size, ciphertext + (i - 1) * block_size, block_size);
    }

    xorOperation(ciphertext, key, block_size);
    xorOperation(ciphertext, iv, block_size);
}

int main() {
    unsigned char key[] = "SECRETKE";
    unsigned char iv[] = "INITVECT";
    unsigned char plaintext[] = "PLAINTEX";
    int block_size = 8;
    int num_blocks = sizeof(plaintext) / block_size;

    // ECB mode encryption
    unsigned char ecb_plaintext[sizeof(plaintext)];
    memcpy(ecb_plaintext, plaintext, sizeof(plaintext));
    encryptECB(ecb_plaintext, key, block_size * num_blocks);

    // CBC mode encryption
    unsigned char cbc_plaintext[sizeof(plaintext)];
    memcpy(cbc_plaintext, plaintext, sizeof(plaintext));
    encryptCBC(cbc_plaintext, key, iv, block_size, num_blocks);

    // Introduce error in the CBC mode ciphertext
    cbc_plaintext[0] ^= 0x01;

    // Decrypt the modified CBC mode ciphertext
    decryptCBC(cbc_plaintext, key, iv, block_size, num_blocks);

    // Output the results
    printf("Corrected ciphertext in ECB Mode: %s\n", ecb_plaintext);
    printf("Propagated ciphertext in CBC Mode: %s\n", cbc_plaintext);

    return 0;
}
output:
Corrected ciphertext in ECB Mode:cuseewert
propagated ciphertext in CBC Mode:ertywtus
